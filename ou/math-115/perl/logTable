#!/usr/bin/perl

use strict;
use warnings;
use POSIX;

my %log10s = map { $_ => log10($_) }  (1..200);
my %lns = map { $_ => log($_) }  (1..200);
my %sqrts = map { $_ => 10 ** (1/2 ** $_)  }  (1..20);

my %table1 = map { $_ => int(10**7 * (1 - 10**-7)**$_) }  (1..100);
my %table2 = map { $_ => int(10**7 * (1 - 10**-5)**$_) } (1000..1200);

# my %toPrint = %sqrts;
# foreach my $value (sort  { $a <=> $b } keys %toPrint) {
#    my $rounded = sprintf("%.14f", $toPrint{$value});
#    print "$value & $rounded ";
#    if ($value % 4 == 0) {
#      print "\\\\\n";
#      print "\\hline\n";
#    } else {
#      print "&";
#    }
# }

my %toPrint = %sqrts;
foreach my $x (1..20) {
   my $power = 1 / 2**$x;
   my $root = 10 ** $power;
   my $delta = ($root - 1) / $power;
   my $epower = exp($power);

   my $formatted = sprintf("%.14f", $power);
   print "$x & $formatted & $root & $delta & $epower \\\\ \n \\hline \n ";
}


