%!PS-Adobe-3.0 EPSF-3.0
%APL_DSC_Encoding: UTF8
%APLProducer: (Version 10.6.7 (Build 10J869) Quartz PS Context)
%%Title: (Unknown)
%%Creator: (Unknown)
%%CreationDate: (Unknown)
%%For: (Unknown)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox: 0 0 826 500
%%EndComments
%%BeginProlog
%%BeginFile: cg-pdf.ps
%%Copyright: Copyright 2000-2004 Apple Computer Incorporated.
%%Copyright: All Rights Reserved.
currentpacking true setpacking
/cg_md 141 dict def
cg_md begin
/L3? languagelevel 3 ge def
/bd{bind def}bind def
/ld{load def}bd
/xs{exch store}bd
/xd{exch def}bd
/cmmtx matrix def
mark
/sc/setcolor
/scs/setcolorspace
/dr/defineresource
/fr/findresource
/T/true
/F/false
/d/setdash
/w/setlinewidth
/J/setlinecap
/j/setlinejoin
/M/setmiterlimit
/i/setflat
/rc/rectclip
/rf/rectfill
/rs/rectstroke
/f/fill
/f*/eofill
/sf/selectfont
/s/show
/xS/xshow
/yS/yshow
/xyS/xyshow
/S/stroke
/m/moveto
/l/lineto
/c/curveto
/h/closepath
/n/newpath
/q/gsave
/Q/grestore
counttomark 2 idiv
{ld}repeat pop
/SC{	
    /ColorSpace fr scs
}bd
/sopr /setoverprint where{pop/setoverprint}{/pop}ifelse ld
/soprm /setoverprintmode where{pop/setoverprintmode}{/pop}ifelse ld
/cgmtx matrix def
/sdmtx{cgmtx currentmatrix pop}bd
/CM {cgmtx setmatrix}bd		
/cm {cmmtx astore CM concat}bd	
/W{clip newpath}bd
/W*{eoclip newpath}bd
statusdict begin product end dup (HP) anchorsearch{
    pop pop pop	
    true
}{
    pop	
   (hp) anchorsearch{
	pop pop true
    }{
	pop false
    }ifelse
}ifelse
{	
    { 
	{ 
	    pop pop 
	    (0)dup 0 4 -1 roll put
	    F charpath
	}cshow
    }
}{
    {F charpath}
}ifelse
/cply exch bd
/cps {cply stroke}bd
/pgsave 0 def
/bp{/pgsave save store}bd
/ep{pgsave restore showpage}def		
/re{4 2 roll m 1 index 0 rlineto 0 exch rlineto neg 0 rlineto h}bd
/scrdict 10 dict def
/scrmtx matrix def
/patarray 0 def
/createpat{patarray 3 1 roll put}bd
/makepat{
scrmtx astore pop
gsave
initgraphics
CM 
patarray exch get
scrmtx
makepattern
grestore
setpattern
}bd
/cg_BeginEPSF{
    userdict save/cg_b4_Inc_state exch put
    userdict/cg_endepsf/cg_EndEPSF load put
    count userdict/cg_op_count 3 -1 roll put 
    countdictstack dup array dictstack userdict/cg_dict_array 3 -1 roll put
    3 sub{end}repeat
    /showpage {} def
    0 setgray 0 setlinecap 1 setlinewidth 0 setlinejoin
    10 setmiterlimit [] 0 setdash newpath
    false setstrokeadjust false setoverprint	
}bd
/cg_EndEPSF{
  countdictstack 3 sub { end } repeat
  cg_dict_array 3 1 index length 3 sub getinterval
  {begin}forall
  count userdict/cg_op_count get sub{pop}repeat
  userdict/cg_b4_Inc_state get restore
  F setpacking
}bd
/cg_biproc{currentfile/RunLengthDecode filter}bd
/cg_aiproc{currentfile/ASCII85Decode filter/RunLengthDecode filter}bd
/ImageDataSource 0 def
L3?{
    /cg_mibiproc{pop pop/ImageDataSource{cg_biproc}def}bd
    /cg_miaiproc{pop pop/ImageDataSource{cg_aiproc}def}bd
}{
    /ImageBandMask 0 def
    /ImageBandData 0 def
    /cg_mibiproc{
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/RunLengthDecode filter dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
    /cg_miaiproc{	
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/ASCII85Decode filter/RunLengthDecode filter
	    dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
}ifelse
/imsave 0 def
/BI{save/imsave xd mark}bd
/EI{imsave restore}bd
/ID{
counttomark 2 idiv
dup 2 add	
dict begin
{def} repeat
pop		
/ImageType 1 def
/ImageMatrix[Width 0 0 Height neg 0 Height]def
currentdict dup/ImageMask known{ImageMask}{F}ifelse exch
L3?{
    dup/MaskedImage known
    { 
	pop
	<<
	    /ImageType 3
	    /InterleaveType 2
	    /DataDict currentdict
	    /MaskDict
	    <<  /ImageType 1
		/Width Width
		/Height Height
		/ImageMatrix ImageMatrix
		/BitsPerComponent 1
		/Decode [0 1]
		currentdict/Interpolate known
		{/Interpolate Interpolate}if
	    >>
	>>
    }if
}if
exch
{imagemask}{image}ifelse	
end	
}bd
/cguidfix{statusdict begin mark version end
{cvr}stopped{cleartomark 0}{exch pop}ifelse
2012 lt{dup findfont dup length dict begin
{1 index/FID ne 2 index/UniqueID ne and
{def} {pop pop} ifelse}forall
currentdict end definefont pop
}{pop}ifelse
}bd
/t_array 0 def
/t_i 0 def
/t_c 1 string def
/x_proc{ 
    exch t_array t_i get add exch moveto
    /t_i t_i 1 add store
}bd
/y_proc{ 
    t_array t_i get add moveto
    /t_i t_i 1 add store
}bd
/xy_proc{
        
	t_array t_i 2 copy 1 add get 3 1 roll get 
	4 -1 roll add 3 1 roll add moveto
	/t_i t_i 2 add store
}bd
/sop 0 def		
/cp_proc/x_proc ld 	
/base_charpath		
{
    /t_array xs
    /t_i 0 def
    { 
	t_c 0 3 -1 roll put
        currentpoint
	t_c cply sop
        cp_proc
    }forall
    /t_array 0 def
}bd
/sop/stroke ld		
/nop{}def
/xsp/base_charpath ld
/ysp{/cp_proc/y_proc ld base_charpath/cp_proc/x_proc ld}bd
/xysp{/cp_proc/xy_proc ld base_charpath/cp_proc/x_proc ld}bd
/xmp{/sop/nop ld /cp_proc/x_proc ld base_charpath/sop/stroke ld}bd
/ymp{/sop/nop ld /cp_proc/y_proc ld base_charpath/sop/stroke ld}bd
/xymp{/sop/nop ld /cp_proc/xy_proc ld base_charpath/sop/stroke ld}bd
/refnt{ 
findfont dup length dict copy dup
/Encoding 4 -1 roll put 
definefont pop
}bd
/renmfont{ 
findfont dup length dict copy definefont pop
}bd
L3? dup dup{save exch}if
/Range 0 def
/DataSource 0 def
/val 0 def
/nRange 0 def
/mulRange 0 def
/d0 0 def
/r0 0 def
/di 0 def
/ri 0 def
/a0 0 def
/a1 0 def
/r1 0 def
/r2 0 def
/dx 0 def
/Nsteps 0 def
/sh3tp 0 def
/ymax 0 def
/ymin 0 def
/xmax 0 def
/xmin 0 def
/setupFunEval 
{
    begin
	/nRange Range length 2 idiv store
	/mulRange   
		    
	[ 
	    0 1 nRange 1 sub
	    { 
		    2 mul/nDim2 xd		
		    Range nDim2 get		
		    Range nDim2 1 add get	
		    1 index sub			
						
		    255 div			
		    exch			
	    }for
	]store
    end
}bd
/FunEval 
{
    begin
	
	nRange mul /val xd	
				
	0 1 nRange 1 sub
	{
	    dup 2 mul/nDim2 xd 
	    val	
	    add DataSource exch get 
	    mulRange nDim2 get mul 	
	    mulRange nDim2 1 add get 
	    add 
	}for	
    end
}bd
/max 
{
	2 copy lt
	{exch pop}{pop}ifelse
}bd
/sh2
{	
	/Coords load aload pop 	
	3 index 3 index translate	
					
	3 -1 roll sub	
	3 1 roll exch 	
	sub				
	2 copy
	dup mul exch dup mul add sqrt	
	dup
	scale  
	atan	
	
	rotate		
	
	/Function load setupFunEval	
	
	
	clippath {pathbbox}stopped {0 0 0 0}if newpath 	
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	currentdict/Extend known
	{
		/Extend load 0 get
		{	
			0/Function load FunEval sc	
			xmin ymin xmin abs ymax ymin sub rectfill
		}if
	}if
	
	/Nsteps/Function load/Size get 0 get 1 sub store
	/dx 1 Nsteps div store
	gsave
		/di ymax ymin sub store
		/Function load
		
		0 1 Nsteps
		{
			1 index FunEval sc
			0 ymin dx di rectfill
			dx 0 translate
		}for
		pop	
	grestore	
	currentdict/Extend known
	{
		/Extend load 1 get
		{	
			Nsteps/Function load FunEval sc	
			1 ymin xmax 1 sub abs ymax ymin sub rectfill
		}if
	}if
}bd
/shp	
{	
	4 copy
	
	dup 0 gt{
		0 exch a1 a0 arc
	}{
		pop 0 moveto
	}ifelse
	dup 0 gt{
		0 exch a0 a1 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
	
	dup 0 gt{
		0 exch a0 a1 arc
	}{
		pop 0 moveto
	}ifelse
	dup 0 gt{
		0 exch a1 a0 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
}bd
/calcmaxs
{	
	
	xmin dup mul ymin dup mul add sqrt		
	xmax dup mul ymin dup mul add sqrt		
	xmin dup mul ymax dup mul add sqrt		
	xmax dup mul ymax dup mul add sqrt		
	max max max								
}bd
/sh3
{	
	/Coords load aload pop 	
	5 index 5 index translate	
	3 -1 roll 6 -1 roll sub		
	3 -1 roll 5 -1 roll sub		
	2 copy dup mul exch dup mul add sqrt
	/dx xs						
	2 copy 0 ne exch 0 ne or
	{
		
		exch atan rotate	
	}{
		pop pop
	}ifelse
	
	/r2 xs
	/r1 xs
	/Function load 
	dup/Size get 0 get 1 sub	
	/Nsteps xs		
	setupFunEval		
	
	
	
	
	
	dx r2 add r1 lt{
		
		0 
	}{
		dx r1 add r2 le
		{ 
			1
		}{ 
			r1 r2 eq
			{	
				2
			}{ 
				3
			}ifelse		
		}ifelse
	}ifelse
	/sh3tp xs		
	clippath {pathbbox}stopped {0 0 0 0}if 
	newpath 	
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	
	dx dup mul r2 r1 sub dup mul sub dup 0 gt
	{
		sqrt r2 r1 sub atan
		/a0 exch 180 exch sub store 
		/a1 a0 neg store 
	}{
		pop
		/a0 0 store
		/a1 360 store		
	}ifelse		
	currentdict/Extend known
	{
		/Extend load 0 get r1 0 gt and	
		{	
			0/Function load FunEval sc	
			
			
			
			
			{ 
				{	
					dx 0 r1 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		
				}
				{	
					r1 0 gt{0 0 r1 0 360 arc fill}if
				}
				{	
					
					
				
					
					0 r1 xmin abs r1 add neg r1 shp
				}
				{	
					
				
					r2 r1 gt{	
						
						0 r1
						r1 neg r2 r1 sub div dx mul	
						0	
						shp	
					}{	
						
						
						
						0 r1 calcmaxs	
						dup
						
						r2 add dx mul dx r1 r2 sub sub div
						neg				
						exch 1 index	
						abs exch sub
						shp
					}ifelse
				} 
			}sh3tp get exec	
		}if
	}if
	
	/d0 0 store
	/r0 r1 store
	/di dx Nsteps div store
	/ri r2 r1 sub Nsteps div store 
	/Function load 
	0 1 Nsteps
	{	
		1 index FunEval sc
		d0 di add r0 ri add d0 r0 shp
		{
		
		d0 0 r0 a1 a0 arc
		d0 di add 0 r0 ri add a0 a1 arcn
		fill
		
		
		d0 0 r0 a0 a1 arc
		d0 di add 0 r0 ri add a1 a0 arcn
		fill
		}pop
		
		
		/d0 d0 di add store
		/r0 r0 ri add store
	}for
	pop	
	
	currentdict/Extend known
	{
		/Extend load 1 get r2 0 gt and	
		{	
			Nsteps/Function load FunEval sc	
			
			
			
			
			{ 
				{
					dx 0 r2 0 360 arc fill
				} 
				{
					dx 0 r2 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		
				} 
				{	
					
					
					xmax abs r1 add r1 dx r1 shp
				}	
				{	
			
					r2 r1 gt{
						
						
						
						calcmaxs dup	
						
						r1 add dx mul dx r2 r1 sub sub div	
						exch 1 index	
						exch sub
						dx r2
						shp
					}{	
						
						r1 neg r2 r1 sub div dx mul	
						0		
						dx 		
						r2		
						shp
					}ifelse
				}
			}			
			sh3tp get exec	
		}if
	}if
}bd
/sh		
{	
	begin
		/ShadingType load dup dup 2 eq exch 3 eq or
		{	
			gsave
				newpath
				/ColorSpace load scs
				currentdict/BBox known
				{
					/BBox load aload pop	
					2 index sub				
					3 index					
					3 -1 roll exch sub 
					exch rectclip
				}if
				2 eq
				{sh2}{sh3}ifelse
			grestore
		}{
			
			pop 
			(DEBUG: shading type unimplemented\n)print flush
		}ifelse
	end
}bd
{restore}if not dup{save exch}if
	L3?{	
		/sh/shfill ld
		/csq/clipsave ld
		/csQ/cliprestore ld
	}if
{restore}if
end
setpacking
%%EndFile
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 0 0 826 500
%%BeginPageSetup
cg_md begin
bp
sdmtx
[ /CIEBasedA 5 dict dup begin /WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeA { { 1.8008  exp } bind  exec} bind 
def 
/MatrixA [ 0.9642 1.0000 0.8249 ] def 
/RangeLMN [ 0.0 2.0000 0.0 2.0000 0.0 2.0000 ] def 
/DecodeLMN [ { 0.9857  mul} bind { 1.0000  mul} bind { 1.3202  mul} bind ] def 
end ] /Cs1 exch/ColorSpace dr pop
%%EndPageSetup
/Cs1 SC
1 sc
q
0 0 826 500 rc
0 500 m
826 500 l
826 0 l
0 0 l
h
f
Q
0.2 w
0.60000002 i
0.5 sc
q
36 36 754 428 rc
1 0 0 -1 0 500 cm
36 453.82495 m
790 453.82495 l
36 439.26602 m
790 439.26602 l
36 410.14816 m
790 410.14816 l
36 395.58926 m
790 395.58926 l
36 381.03033 m
790 381.03033 l
36 351.91248 m
790 351.91248 l
36 337.35352 m
790 337.35352 l
36 322.79462 m
790 322.79462 l
36 293.67676 m
790 293.67676 l
36 279.11786 m
790 279.11786 l
36 264.55893 m
790 264.55893 l
36 235.44107 m
790 235.44107 l
36 220.88214 m
790 220.88214 l
36 206.32324 m
790 206.32324 l
36 177.20538 m
790 177.20538 l
36 162.64645 m
790 162.64645 l
36 148.08752 m
790 148.08752 l
36 118.96967 m
790 118.96967 l
36 104.41077 m
790 104.41077 l
36 89.851837 m
790 89.851837 l
36 60.733978 m
790 60.733978 l
36 46.175049 m
790 46.175049 l
49.026901 464 m
49.026901 36 l
78.144753 464 m
78.144753 36 l
92.703674 464 m
92.703674 36 l
107.2626 464 m
107.2626 36 l
136.38045 464 m
136.38045 36 l
150.93938 464 m
150.93938 36 l
165.49829 464 m
165.49829 36 l
194.61613 464 m
194.61613 36 l
209.17506 464 m
209.17506 36 l
223.73399 464 m
223.73399 36 l
252.85185 464 m
252.85185 36 l
267.41077 464 m
267.41077 36 l
281.96967 464 m
281.96967 36 l
311.08755 464 m
311.08755 36 l
325.64645 464 m
325.64645 36 l
340.20538 464 m
340.20538 36 l
369.32324 464 m
369.32324 36 l
383.88214 464 m
383.88214 36 l
398.44107 464 m
398.44107 36 l
427.55893 464 m
427.55893 36 l
442.11786 464 m
442.11786 36 l
456.67679 464 m
456.67679 36 l
485.79459 464 m
485.79459 36 l
500.35352 464 m
500.35352 36 l
514.91248 464 m
514.91248 36 l
544.03027 464 m
544.03027 36 l
558.58923 464 m
558.58923 36 l
573.14819 464 m
573.14819 36 l
602.26599 464 m
602.26599 36 l
616.82489 464 m
616.82489 36 l
631.38385 464 m
631.38385 36 l
660.50171 464 m
660.50171 36 l
675.06061 464 m
675.06061 36 l
689.61957 464 m
689.61957 36 l
718.73743 464 m
718.73743 36 l
733.29633 464 m
733.29633 36 l
747.85522 464 m
747.85522 36 l
776.97308 464 m
776.97308 36 l
S
0.30000001 w
0 sc
36 424.70709 m
790 424.70709 l
36 366.47141 m
790 366.47141 l
36 308.23569 m
790 308.23569 l
36 250 m
790 250 l
36 191.76428 m
790 191.76428 l
36 133.52863 m
790 133.52863 l
36 75.292908 m
790 75.292908 l
63.585823 464 m
63.585823 36 l
121.82153 464 m
121.82153 36 l
180.05722 464 m
180.05722 36 l
238.29292 464 m
238.29292 36 l
296.52863 464 m
296.52863 36 l
354.76431 464 m
354.76431 36 l
413 464 m
413 36 l
471.23572 464 m
471.23572 36 l
529.47137 464 m
529.47137 36 l
587.70709 464 m
587.70709 36 l
645.94275 464 m
645.94275 36 l
704.17847 464 m
704.17847 36 l
762.41418 464 m
762.41418 36 l
S
CM
790 250 m
780 255 l
783 250 l
780 245 l
h
790 250 m
f
1.5 w
1 0 0 -1 0 500 cm
36 250 m
790 250 l
S
49.026901 252 m
49.026901 248 l
78.144753 252 m
78.144753 248 l
92.703674 252 m
92.703674 248 l
107.2626 252 m
107.2626 248 l
136.38045 252 m
136.38045 248 l
150.93938 252 m
150.93938 248 l
165.49829 252 m
165.49829 248 l
194.61613 252 m
194.61613 248 l
209.17506 252 m
209.17506 248 l
223.73399 252 m
223.73399 248 l
252.85185 252 m
252.85185 248 l
267.41077 252 m
267.41077 248 l
281.96967 252 m
281.96967 248 l
311.08755 252 m
311.08755 248 l
325.64645 252 m
325.64645 248 l
340.20538 252 m
340.20538 248 l
369.32324 252 m
369.32324 248 l
383.88214 252 m
383.88214 248 l
398.44107 252 m
398.44107 248 l
427.55893 252 m
427.55893 248 l
442.11786 252 m
442.11786 248 l
456.67679 252 m
456.67679 248 l
485.79459 252 m
485.79459 248 l
500.35352 252 m
500.35352 248 l
514.91248 252 m
514.91248 248 l
544.03027 252 m
544.03027 248 l
558.58923 252 m
558.58923 248 l
573.14819 252 m
573.14819 248 l
602.26599 252 m
602.26599 248 l
616.82489 252 m
616.82489 248 l
631.38385 252 m
631.38385 248 l
660.50171 252 m
660.50171 248 l
675.06061 252 m
675.06061 248 l
689.61957 252 m
689.61957 248 l
718.73743 252 m
718.73743 248 l
733.29633 252 m
733.29633 248 l
747.85522 252 m
747.85522 248 l
776.97308 252 m
776.97308 248 l
S
63.585823 254 m
63.585823 246 l
121.82153 254 m
121.82153 246 l
180.05722 254 m
180.05722 246 l
238.29292 254 m
238.29292 246 l
296.52863 254 m
296.52863 246 l
354.76431 254 m
354.76431 246 l
413 254 m
413 246 l
471.23572 254 m
471.23572 246 l
529.47137 254 m
529.47137 246 l
587.70709 254 m
587.70709 246 l
645.94275 254 m
645.94275 246 l
704.17847 254 m
704.17847 246 l
762.41418 254 m
762.41418 246 l
S
CM
413 464 m
408 454 l
413 457 l
418 454 l
h
413 464 m
f
1 0 0 -1 0 500 cm
413 464 m
413 36 l
S
411 453.82495 m
415 453.82495 l
411 439.26602 m
415 439.26602 l
411 410.14816 m
415 410.14816 l
411 395.58926 m
415 395.58926 l
411 381.03033 m
415 381.03033 l
411 351.91248 m
415 351.91248 l
411 337.35352 m
415 337.35352 l
411 322.79462 m
415 322.79462 l
411 293.67676 m
415 293.67676 l
411 279.11786 m
415 279.11786 l
411 264.55893 m
415 264.55893 l
411 235.44107 m
415 235.44107 l
411 220.88214 m
415 220.88214 l
411 206.32324 m
415 206.32324 l
411 177.20538 m
415 177.20538 l
411 162.64645 m
415 162.64645 l
411 148.08752 m
415 148.08752 l
411 118.96967 m
415 118.96967 l
411 104.41077 m
415 104.41077 l
411 89.851837 m
415 89.851837 l
411 60.733978 m
415 60.733978 l
411 46.175049 m
415 46.175049 l
S
409 424.70709 m
417 424.70709 l
409 366.47141 m
417 366.47141 l
409 308.23569 m
417 308.23569 l
409 250 m
417 250 l
409 191.76428 m
417 191.76428 l
409 133.52863 m
417 133.52863 l
409 75.292908 m
417 75.292908 l
S
Q
1 w
0 sc
q
0 0 826 500 rc
1 0 0 -1 0 500 cm
35.5 35.5 m
790.5 35.5 l
790.5 464.5 l
35.5 464.5 l
h
35.5 35.5 m
S
0 i
1 sc
CM
0 500 m
1 500 l
1 0 l
0 0 l
h
f
825 500 m
826 500 l
826 0 l
825 0 l
h
f
0 500 m
826 500 l
826 499 l
0 499 l
h
f
0 1 m
826 1 l
826 0 l
0 0 l
h
f
ep
end
%%Trailer
%%EOF
